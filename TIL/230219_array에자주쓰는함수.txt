# array 정렬하는 법
.sort()

var 어레이 = [7,3,5,2,40];
어레이.sort(function(a, b){
  return a - b
});

console.log(어레이);

1. a, b는 array 안의 자료들
2. return 오른쪽이 양수면 a를 오른쪽으로 정렬
3. return 오른쪽이 음수면 b를 오른쪽으로 정렬
4. 그리고 array 안의 자료들을 계속 뽑아서 a, b에 넣어줌
이렇게 동작해서 a - b 저렇게 쓰면 숫자순 정렬이 되는 것

sort 함수는 원본을 변형시킨다.
원본을 변형시켜버리면 나중에 원본으로 되돌아갈 수 없으니까
array/object 자료 조작시엔 원본을 따로 복사해두고 조작하는 경우도 있다.


# array 자료에서 원하는 자료만 필터링하는 법
.filter()

var 어레이 = [7,3,5,2,40];
var 새어레이 = 어레이.filter(function(a){
  return 조건식
}); 

1. a라고 작명한건 array에 있던 데이터를 뜻하고
2. return 우측에 조건식을 넣으면 조건식에 맞는 a만 남겨준다.
3. 그리고 filter는 원본을 변형시키지 않는 고마운 함수기 때문에 새로운 변수에 담아써야한다. 

var 어레이 = [7,3,5,2,40];
var 새어레이 = 어레이.filter(function(a){
  return a < 4
}); 
console.log(새어레이) // [2,3]

* 응용: 쇼핑몰에서 "6만원 이하 상품만 보기" 와 같은 필터기능

# array 안의 자료들을 전부 변형하는 방법
map()

var 어레이 = [7,3,5,2,40];
var 새어레이 = 어레이.map(function(a){
  return 수식같은거
});

1. a라고 작명한건 array에 있던 데이터를 뜻하고
2. return 우측에 변경될 수식같은걸 넣는다.
3. 그리고 map은 원본을 변형시키지 않는 고마운 함수기 때문에 새로운 변수에 담아써야한다. 

var 어레이 = [7,3,5,2,40];
var 새어레이 = 어레이.map(function(a){
  return a * 4
});
console.log(새어레이) // [28, 12, 20, 8, 160]

* 응용: 쇼핑몰에서 "달러 -> 원화로 변환하기" 